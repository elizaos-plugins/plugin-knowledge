{
  "name": "@elizaos/plugin-knowledge",
  "description": "Plugin for Knowledge",
  "version": "1.0.2",
  "type": "module",
  "main": "dist/index.js",
  "module": "dist/index.js",
  "types": "dist/index.d.ts",
  "keywords": [
    "plugin",
    "elizaos"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/elizaos-plugins/plugin-knowledge.git"
  },
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "import": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.js"
      }
    }
  },
  "files": [
    "dist"
  ],
  "dependencies": {
    "@ai-sdk/anthropic": "^1.2.11",
    "@ai-sdk/google": "^1.2.18",
    "@ai-sdk/openai": "^1.3.22",
    "@elizaos/core": "^1.0.0",
    "@elizaos/plugin-sql": "^1.0.0-beta",
    "@openrouter/ai-sdk-provider": "^0.4.5",
    "@tanstack/react-query": "^5.51.1",
    "@vitejs/plugin-react-swc": "^3.10.0",
    "ai": "^4.3.15",
    "clsx": "^2.1.1",
    "dotenv": "^16.5.0",
    "esbuild-plugin-copy": "^2.1.1",
    "lucide-react": "^0.408.0",
    "mammoth": "^1.9.0",
    "pdfjs-dist": "^5.2.133",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^7.1.1",
    "react-force-graph-2d": "^1.27.1",
    "tailwind-merge": "^2.4.0",
    "textract": "^2.5.0",
    "zod": "3.25.23"
  },
  "devDependencies": {
    "tsup": "8.5.0",
    "typescript": "5.8.3",
    "prettier": "3.5.3",
    "tailwindcss": "^3.4.4",
    "tailwindcss-animate": "^1.0.7",
    "postcss": "^8.4.39",
    "autoprefixer": "^10.4.19"
  },
  "scripts": {
    "dev": "tsup --watch",
    "build": "vite build && tsup",
    "lint": "prettier --write ./src",
    "test": "elizaos test",
    "format": "prettier --write ./src",
    "format:check": "prettier --check ./src",
    "clean": "rm -rf dist .turbo node_modules .turbo-tsconfig.json tsconfig.tsbuildinfo"
  },
  "publishConfig": {
    "access": "public"
  },
  "resolutions": {
    "zod": "3.25.23"
  },
  "gitHead": "b165ad83e5f7a21bc1edbd83374ca087e3cd6b33",
  "agentConfig": {
    "pluginType": "elizaos:plugin:1.0.0",
    "pluginParameters": {
      "OPENAI_API_KEY": {
        "type": "string",
        "description": "API key for authenticating requests to OpenAI services used by the Knowledge plugin.",
        "required": false
      },
      "OPENAI_EMBEDDING_MODEL": {
        "type": "string",
        "description": "Specifies the OpenAI embedding model to use when generating vector embeddings.",
        "required": false
      },
      "CTX_KNOWLEDGE_ENABLED": {
        "type": "boolean",
        "description": "Enables contextual knowledge functionality with enriched embeddings.",
        "required": false
      },
      "TEXT_PROVIDER": {
        "type": "string",
        "description": "LLM provider for text generation (e.g., openai, anthropic, openrouter, google).",
        "required": false
      },
      "TEXT_MODEL": {
        "type": "string",
        "description": "Name of the text generation model to use with the selected provider.",
        "required": false
      },
      "OPENROUTER_API_KEY": {
        "type": "string",
        "description": "API key for authenticating with the OpenRouter service when TEXT_PROVIDER=openrouter.",
        "required": false
      },
      "ANTHROPIC_API_KEY": {
        "type": "string",
        "description": "API key for Anthropic models when TEXT_PROVIDER=anthropic.",
        "required": false
      },
      "GOOGLE_API_KEY": {
        "type": "string",
        "description": "API key for Google AI models when TEXT_PROVIDER=google or EMBEDDING_PROVIDER=google.",
        "required": false
      },
      "EMBEDDING_PROVIDER": {
        "type": "string",
        "description": "Provider to use for generating embeddings (e.g., openai, google).",
        "required": false
      },
      "TEXT_EMBEDDING_MODEL": {
        "type": "string",
        "description": "Embedding model name to use with the selected EMBEDDING_PROVIDER.",
        "required": false
      },
      "EMBEDDING_DIMENSION": {
        "type": "number",
        "description": "Custom dimension size for generated embeddings.",
        "required": false
      },
      "MAX_CONCURRENT_REQUESTS": {
        "type": "number",
        "description": "Maximum number of concurrent API requests allowed for rate limiting.",
        "required": false,
        "default": 30
      },
      "REQUESTS_PER_MINUTE": {
        "type": "number",
        "description": "Maximum number of API requests permitted per minute.",
        "required": false,
        "default": 60
      },
      "TOKENS_PER_MINUTE": {
        "type": "number",
        "description": "Maximum number of tokens that can be processed per minute.",
        "required": false,
        "default": 150000
      },
      "OPENAI_BASE_URL": {
        "type": "string",
        "description": "Custom base URL for routing OpenAI API requests (useful for proxies).",
        "required": false
      },
      "ANTHROPIC_BASE_URL": {
        "type": "string",
        "description": "Custom base URL for Anthropic API requests.",
        "required": false
      },
      "OPENROUTER_BASE_URL": {
        "type": "string",
        "description": "Custom base URL for OpenRouter API requests.",
        "required": false
      },
      "GOOGLE_BASE_URL": {
        "type": "string",
        "description": "Custom base URL for Google AI API requests.",
        "required": false
      },
      "KNOWLEDGE_PATH": {
        "type": "string",
        "description": "Filesystem path where the plugin should look for knowledge documents.",
        "required": false,
        "default": "./docs"
      },
      "MAX_INPUT_TOKENS": {
        "type": "number",
        "description": "Maximum number of input tokens allowed per request.",
        "required": false,
        "default": 4000
      },
      "MAX_OUTPUT_TOKENS": {
        "type": "number",
        "description": "Maximum number of output tokens that the model can generate.",
        "required": false,
        "default": 4096
      },
      "OPENAI_EMBEDDING_DIMENSIONS": {
        "type": "number",
        "description": "Alternative environment variable for embedding dimension when using OpenAI.",
        "required": false,
        "default": 1536
      },
      "LOAD_DOCS_ON_STARTUP": {
        "type": "boolean",
        "description": "Determines whether documents should be automatically loaded from the docs folder when the plugin starts. Any value other than the string 'false' enables loading.",
        "required": false,
        "default": true
      }
    }
  }
}
